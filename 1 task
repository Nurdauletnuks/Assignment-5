import java.util.List;

class Character {
    private String name;
    private Appearance appearance;
    private List<Ability> abilities;
    private List<Equipment> equipment;
    private Attribute attributes;

    public Character(String name, Appearance appearance, List<Ability> abilities, List<Equipment> equipment, Attribute attributes) {
        this.name = name;
        this.appearance = appearance;
        this.abilities = abilities;
        this.equipment = equipment;
        this.attributes = attributes;
    }
}

abstract class CharacterFactory {
    public abstract Character createCharacter(String name);
}

class WarriorFactory extends CharacterFactory {
    @Override
    public Character createCharacter(String name) {
        return null;
    }
}

class MageFactory extends CharacterFactory {
    @Override
    public Character createCharacter(String name) {
        return null;
    }
}

class ArcherFactory extends CharacterFactory {
    @Override
    public Character createCharacter(String name) {
        return null;
    }
}

class Appearance {}

class Ability {}

class Equipment {}

class Attribute {}

class CharacterCreator {
    private CharacterFactory factory;

    public void setFactory(CharacterFactory factory) {
        this.factory = factory;
    }

    public Character createCharacter(String name) {
        if (factory == null) {
            throw new IllegalStateException("CharacterFactory has not been set.");
        }
        return factory.createCharacter(name);
    }
}

public class Game {
    public static void main(String[] args) {
        CharacterCreator creator = new CharacterCreator();

        CharacterFactory warriorFactory = new WarriorFactory();
        creator.setFactory(warriorFactory);
        Character warrior = creator.createCharacter("Warrior 1");

        CharacterFactory mageFactory = new MageFactory();
        creator.setFactory(mageFactory);
        Character mage = creator.createCharacter("Mage 1");

        CharacterFactory archerFactory = new ArcherFactory();
        creator.setFactory(archerFactory);
        Character archer = creator.createCharacter("Archer 1");
    }
}
